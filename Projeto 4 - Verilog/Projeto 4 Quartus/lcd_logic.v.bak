module Logica_LCD
(
	input clk, lcd_busy, iniciar_relogio,
	input centena, 
	input [3:0]dezena, 
	input [3:0]unidade, 
	input [3:0]decimo,
	input [23:0]hora,
	
	output lcd_ena,
	output [9:0] lcd_bar
		
);

reg [1:0] estado = 2'd0;	
reg lcd_enable;
reg [9:0] lcd_bus;

assign lcd_ena = lcd_enable;
assign lcd_bar = lcd_bus;

always@(posedge clk) begin

	reg [5:0] char = 6'd0; //em caso de erro, usar o assign.	
	reg [24:0] count = 25'd0;
	
	if(estado == 2'd0) begin
	
		if (iniciar_relogio == 1'b1) begin
			estado <= 2'd3;
		end else if (count==25000000) begin
			estado <= 2'd1;
		end
		
		while (i < 25000001) begin
			count = count + 1;
			i = i + 1;
		end
		
		if((!lcd_busy) & (!lcd_enable)) begin
			lcd_enable <= 1'b1; //Habilita o LCD
			if(char < 34) begin 
				char = char + 1;//Incrementa o estado
			end
			else begin
				char = 0;
			end
			case (char)
				0  : lcd_bus <= {2'b00, 8'b10000000}; //inst. linha 1
				1  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				2  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				3  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				4  : lcd_bus <= {2'b10, 8'b01000101}; //E  
				5  : lcd_bus <= {2'b10, 8'b01101100}; //l 
				6  : lcd_bus <= {2'b10, 8'b01100101}; //e   
				7  : lcd_bus <= {2'b10, 8'b01110100}; //t 
				8  : lcd_bus <= {2'b10, 8'b01110010}; //r   
				9  : lcd_bus <= {2'b10, 8'b01101111}; //o   
				10 : lcd_bus <= {2'b10, 8'b01101110}; //n   
				11 : lcd_bus <= {2'b10, 8'b01101001}; //i  
				12 : lcd_bus <= {2'b10, 8'b01100011}; //c
				13 : lcd_bus <= {2'b10, 8'b01100001}; //a  
				14 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				15 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço    
				16 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				
				17 : lcd_bus <= {2'b00, 8'b11000000}; //inst. linha 2
				18 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				19 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				20 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				21 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				22 : lcd_bus <= {2'b10, 8'b01000100}; //D
				23 : lcd_bus <= {2'b10, 8'b01101001}; //i
				24 : lcd_bus <= {2'b10, 8'b01100111}; //g  
				25 : lcd_bus <= {2'b10, 8'b01101001}; //i   
				26 : lcd_bus <= {2'b10, 8'b01110100}; //t 
				27 : lcd_bus <= {2'b10, 8'b01100001}; //a 
				28 : lcd_bus <= {2'b10, 8'b01101100}; //l   
				29 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				30 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				31 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				32 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				33 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				default: lcd_enable <= 1'b0; //desabilita o LCD
			endcase
		end
			else begin
				lcd_enable <= 1'b0; //desabilita o LCD
			end
	end //end do if estado
	
	
	if(estado == 2'd1) begin
	
		if (iniciar_relogio == 1'b1) begin
			estado <= 2'd3;
		end else if (count==25000000) begin
			estado <= 2'd2;
		end
		
		while (i < 25000001) begin
			count = count + 1;
			i = i + 1;
		end
	
		if((!lcd_busy) & (!lcd_enable)) begin
			lcd_enable <= 1'b1; //Habilita o LCD
			if(char < 34) begin 
				char = char + 1;//Incrementa o estado
			end
			else begin
				char = 0;
			end
			case (char)
				0  : lcd_bus <= {2'b00, 8'b10000000}; //inst. linha 1
				1  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				2  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				3  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				4  : lcd_bus <= {2'b10, 8'b01110000}; //P
				5  : lcd_bus <= {2'b10, 8'b01110010}; //r 
				6  : lcd_bus <= {2'b10, 8'b01101111}; //o   
				7  : lcd_bus <= {2'b10, 8'b01101010}; //j 
				8  : lcd_bus <= {2'b10, 8'b01100101}; //e   
				9  : lcd_bus <= {2'b10, 8'b01110100}; //t   
				10 : lcd_bus <= {2'b10, 8'b01101111}; //o
				11 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				12 : lcd_bus <= {2'b10, 8'b00110011}; //3
				13 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço  
				14 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				15 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço    
				16 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				
				17 : lcd_bus <= {2'b00, 8'b11000000}; //inst. linha 2
				18 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				19 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				20 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				21 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				22 : lcd_bus <= {2'b10, 8'b01010110}; //V
				23 : lcd_bus <= {2'b10, 8'b01100101}; //e
				24 : lcd_bus <= {2'b10, 8'b01110010}; //r  
				25 : lcd_bus <= {2'b10, 8'b01101001}; //i   
				26 : lcd_bus <= {2'b10, 8'b01101100}; //l 
				27 : lcd_bus <= {2'b10, 8'b01101111}; //o 
				28 : lcd_bus <= {2'b10, 8'b01100111}; //g   
				29 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				30 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				31 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				32 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				33 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				default: lcd_enable <= 1'b0; //desabilita o LCD
			endcase
			end
			else begin
				lcd_enable <= 1'b0; //desabilita o LCD
			end
	end //end do if estado
	
	if(estado == 2'd2) begin
	
		if (iniciar_relogio == 1'b1) begin
			estado <= 2'd3;
		end else if (count==25000000) begin
			estado <= 2'd0;
		end
		
		while (i < 25000001) begin
			count = count + 1;
			i = i + 1;
		end
		
		if((!lcd_busy) & (!lcd_enable)) begin
			lcd_enable <= 1'b1; //Habilita o LCD
			if(char < 34) begin 
				char = char + 1;//Incrementa o estado
			end
			else begin
				char = 0;
			end
			case (char)
				0  : lcd_bus <= {2'b00, 8'b10000000}; //inst. linha 1
				1  : lcd_bus <= {2'b10, 8'b01000001}; //A 
				2  : lcd_bus <= {2'b10, 8'b01101100}; //l 
				3  : lcd_bus <= {2'b10, 8'b01110101}; //u 
				4  : lcd_bus <= {2'b10, 8'b01101110}; //n 
				5  : lcd_bus <= {2'b10, 8'b01101111}; //o 
				6  : lcd_bus <= {2'b10, 8'b01110011}; //s   
				7  : lcd_bus <= {2'b10, 8'b00111010}; //:  
				8  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				9  : lcd_bus <= {2'b10, 8'b01000001}; //A
				10 : lcd_bus <= {2'b10, 8'b01101100}; //l   
				11 : lcd_bus <= {2'b10, 8'b01111001}; //y   
				12 : lcd_bus <= {2'b10, 8'b01110011}; //s  
				13 : lcd_bus <= {2'b10, 8'b01110011}; //s   
				14 : lcd_bus <= {2'b10, 8'b01101111}; //o  
				15 : lcd_bus <= {2'b10, 8'b01101110}; //n  
				16 : lcd_bus <= {2'b10, 8'b00101100}; //,
				
				17 : lcd_bus <= {2'b00, 8'b11000000}; //inst. linha 2
				18 : lcd_bus <= {2'b10, 8'b01000110}; //F
				19 : lcd_bus <= {2'b10, 8'b01100101}; //e
				20 : lcd_bus <= {2'b10, 8'b01101100}; //l 
				21 : lcd_bus <= {2'b10, 8'b01101001}; //i   
				22 : lcd_bus <= {2'b10, 8'b01110000}; //p
				23 : lcd_bus <= {2'b10, 8'b01100101}; //e  
				24 : lcd_bus <= {2'b10, 8'b00101100}; //,  
				25 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço   
				26 : lcd_bus <= {2'b10, 8'b01010110}; //V
				27 : lcd_bus <= {2'b10, 8'b01101001}; //i 
				28 : lcd_bus <= {2'b10, 8'b01100011}; //c   
				29 : lcd_bus <= {2'b10, 8'b01110100}; //t   
				30 : lcd_bus <= {2'b10, 8'b01101111}; //o
				31 : lcd_bus <= {2'b10, 8'b01110010}; //r   
				32 : lcd_bus <= {2'b10, 8'b01101001}; //i
				33 : lcd_bus <= {2'b10, 8'b01100001}; //a   			 
				default : lcd_enable <= 1'b0; //desabilita o LCD
			endcase
			end
			else begin
				lcd_enable <= 1'b0; //desabilita o LCD
			end
	end //end do if estado
	
	
	if(estado == 2'd3) begin
		if((!lcd_busy) & (!lcd_enable)) begin
			lcd_enable <= 1'b1; //Habilita o LCD
			if(char < 34) begin 
				char = char + 1;//Incrementa o estado
			end
			else begin
				char = 0;
			end
			case (char)
				0  : lcd_bus <= {2'b00, 8'b10000000}; //inst. linha 1
				1  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				2  : lcd_bus <= {2'b10, 8'b01011010}; //H
				3  : lcd_bus <= {2'b10, 8'b01101111}; //o
				4  : lcd_bus <= {2'b10, 8'b01110010}; //r 
				5  : lcd_bus <= {2'b10, 8'b01100001}; //a
				6  : lcd_bus <= {2'b10, 8'b00111010}; //:  
				7  : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				8  : lcd_bus <= {2'b10, 8'b01001000}; //H
				9  : lcd_bus <= {2'b10, 8'b01001000}; //H  
				10 : lcd_bus <= {2'b10, 8'b00111010}; //:  
				11 : lcd_bus <= {2'b10, 8'b01001101}; //M 
				12 : lcd_bus <= {2'b10, 8'b01001101}; //M
				13 : lcd_bus <= {2'b10, 8'b00111010}; //: 
				14 : lcd_bus <= {2'b10, 8'b01010011}; //S  
				15 : lcd_bus <= {2'b10, 8'b01010011}; //S   
				16 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				
				17 : lcd_bus <= {2'b00, 8'b11000000}; //inst. linha 2 // ("  Temp: CDU.X°C ")
				18 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço 
				19 : lcd_bus <= {2'b10, 8'b01010100}; //T
				20 : lcd_bus <= {2'b10, 8'b01100101}; //e 
				21 : lcd_bus <= {2'b10, 8'b01101101}; //m   
				22 : lcd_bus <= {2'b10, 8'b01110000}; //p
				23 : lcd_bus <= {2'b10, 8'b00111010}; //:  
				24 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço  
				25 : lcd_bus <= {2'b10, 7'b0011000, centena}; //Centena   
				26 : lcd_bus <= {2'b10, 4'b0011, dezena};     //Dezena 
				27 : lcd_bus <= {2'b10, 4'b0011, unidade};    //Unidade 
				28 : lcd_bus <= {2'b10, 8'b00101110};         //.   
				29 : lcd_bus <= {2'b10, 4'b0011, decimo};     //decimo   
				30 : lcd_bus <= {2'b10, 8'b11011111}; //° 
				31 : lcd_bus <= {2'b10, 8'b01000011}; //C   
				32 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
				33 : lcd_bus <= {2'b10, 8'b00100000}; //Espaço
			endcase
			end
			else begin
				lcd_enable <= 1'b0; //desabilita o LCD
			end
	end //end do if estado	
end //end do always
endmodule