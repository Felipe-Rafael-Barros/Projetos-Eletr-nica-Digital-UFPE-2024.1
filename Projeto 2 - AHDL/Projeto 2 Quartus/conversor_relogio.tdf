PARAMETERS(
	n = 32 , -- número de flip-flops para contagem binária.
	count = 3000000000 -- valor da contagem
);
SUBDESIGN Conversor_relogio
(
	clock : INPUT;             -- Entrada de clock principal
   Clock_convertido : OUTPUT;  -- Saída do clock convertido
)
VARIABLE
	Flip[n-1..0] : TFF;      -- Vetor de flip-flops tipo T
	estado_pulso : MACHINE WITH STATES (MINUTO1, MINUTO2);
BEGIN

	estado_pulso.clk=clock;


   Flip[0].clk = NOT clock;
   Flip[0].t = VCC;        -- O flip-flop T sempre alterna
   Flip[0].clrn = NOT (Flip[].q == count);    -- Reset para o contador
   Flip[0].prn = VCC;      -- Preset sempre ativo

		-- Laço para gerar os outros flip-flops
   FOR i IN 1 TO n-1 GENERATE
		Flip[i].clk = NOT Flip[i-1].q; -- Clock de cada flip-flop é a saída do anterior
      Flip[i].t = VCC;
      Flip[i].clrn = NOT (Flip[].q == count);
      Flip[i].prn = VCC;
   END GENERATE;
	
	CASE estado_pulso IS
		WHEN MINUTO1=>
			IF	(Flip[].q == 100000) THEN
				Clock_convertido = vcc; -- Ativou o Reset de todos os Flip-Flops
				estado_pulso=MINUTO2;
			ELSE
				Clock_convertido = GND; -- Após o reset desetivou o nó de reset de todos os Flip-Flops
			END IF;
		WHEN MINUTO2=>
			IF	(Flip[].q == count) THEN	 
				Clock_convertido = vcc; -- Ativou o Reset de todos os Flip-Flops
			ELSE
				Clock_convertido = GND; -- Após o reset desetivou o nó de reset de todos os Flip-Flops
			END IF;
	END CASE; 
	 
END;
